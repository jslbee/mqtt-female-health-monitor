import { IHeaderProps } from './IHeaderProps';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        label?(_: {}): any;
    };
    refs: {};
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    headerProps: {
        type: () => IHeaderProps;
        required: true;
    };
    previousYearLabel: {
        type: StringConstructor;
        default: string;
    };
    previousPeriodLabel: {
        type: StringConstructor;
        default: string;
    };
    nextPeriodLabel: {
        type: StringConstructor;
        default: string;
    };
    nextYearLabel: {
        type: StringConstructor;
        default: string;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {} & {
    input: any;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    headerProps: {
        type: () => IHeaderProps;
        required: true;
    };
    previousYearLabel: {
        type: StringConstructor;
        default: string;
    };
    previousPeriodLabel: {
        type: StringConstructor;
        default: string;
    };
    nextPeriodLabel: {
        type: StringConstructor;
        default: string;
    };
    nextYearLabel: {
        type: StringConstructor;
        default: string;
    };
}>> & Readonly<{
    onInput?: ((...args: any) => any) | undefined;
}>, {
    previousYearLabel: string;
    previousPeriodLabel: string;
    nextPeriodLabel: string;
    nextYearLabel: string;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
